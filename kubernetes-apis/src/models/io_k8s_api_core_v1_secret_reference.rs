/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.13.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sApiCoreV1SecretReference : SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sApiCoreV1SecretReference {
  /// Name is unique within a namespace to reference a secret resource.
  #[serde(rename = "name")]
  name: Option<String>,
  /// Namespace defines the space within which the secret name must be unique.
  #[serde(rename = "namespace")]
  namespace: Option<String>
}

impl IoK8sApiCoreV1SecretReference {
  /// SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  pub fn new() -> IoK8sApiCoreV1SecretReference {
    IoK8sApiCoreV1SecretReference {
      name: None,
      namespace: None
    }
  }

  pub fn set_name(&mut self, name: String) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: String) -> IoK8sApiCoreV1SecretReference {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&String> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

  pub fn set_namespace(&mut self, namespace: String) {
    self.namespace = Some(namespace);
  }

  pub fn with_namespace(mut self, namespace: String) -> IoK8sApiCoreV1SecretReference {
    self.namespace = Some(namespace);
    self
  }

  pub fn namespace(&self) -> Option<&String> {
    self.namespace.as_ref()
  }

  pub fn reset_namespace(&mut self) {
    self.namespace = None;
  }

}



