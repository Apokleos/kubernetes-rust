/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.13.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sApiCoreV1TopologySelectorTerm : A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sApiCoreV1TopologySelectorTerm {
  /// A list of topology selector requirements by labels.
  #[serde(rename = "matchLabelExpressions")]
  match_label_expressions: Option<Vec<::models::IoK8sApiCoreV1TopologySelectorLabelRequirement>>
}

impl IoK8sApiCoreV1TopologySelectorTerm {
  /// A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.
  pub fn new() -> IoK8sApiCoreV1TopologySelectorTerm {
    IoK8sApiCoreV1TopologySelectorTerm {
      match_label_expressions: None
    }
  }

  pub fn set_match_label_expressions(&mut self, match_label_expressions: Vec<::models::IoK8sApiCoreV1TopologySelectorLabelRequirement>) {
    self.match_label_expressions = Some(match_label_expressions);
  }

  pub fn with_match_label_expressions(mut self, match_label_expressions: Vec<::models::IoK8sApiCoreV1TopologySelectorLabelRequirement>) -> IoK8sApiCoreV1TopologySelectorTerm {
    self.match_label_expressions = Some(match_label_expressions);
    self
  }

  pub fn match_label_expressions(&self) -> Option<&Vec<::models::IoK8sApiCoreV1TopologySelectorLabelRequirement>> {
    self.match_label_expressions.as_ref()
  }

  pub fn reset_match_label_expressions(&mut self) {
    self.match_label_expressions = None;
  }

}



