/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.13.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sApiCoreV1TcpSocketAction : TCPSocketAction describes an action based on opening a socket

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sApiCoreV1TcpSocketAction {
  /// Optional: Host name to connect to, defaults to the pod IP.
  #[serde(rename = "host")]
  host: Option<String>,
  /// IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  #[serde(rename = "port")]
  port: String
}

impl IoK8sApiCoreV1TcpSocketAction {
  /// TCPSocketAction describes an action based on opening a socket
  pub fn new(port: String) -> IoK8sApiCoreV1TcpSocketAction {
    IoK8sApiCoreV1TcpSocketAction {
      host: None,
      port: port
    }
  }

  pub fn set_host(&mut self, host: String) {
    self.host = Some(host);
  }

  pub fn with_host(mut self, host: String) -> IoK8sApiCoreV1TcpSocketAction {
    self.host = Some(host);
    self
  }

  pub fn host(&self) -> Option<&String> {
    self.host.as_ref()
  }

  pub fn reset_host(&mut self) {
    self.host = None;
  }

  pub fn set_port(&mut self, port: String) {
    self.port = port;
  }

  pub fn with_port(mut self, port: String) -> IoK8sApiCoreV1TcpSocketAction {
    self.port = port;
    self
  }

  pub fn port(&self) -> &String {
    &self.port
  }


}



