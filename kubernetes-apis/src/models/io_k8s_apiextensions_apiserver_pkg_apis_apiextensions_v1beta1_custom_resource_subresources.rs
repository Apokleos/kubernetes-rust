/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.13.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresources : CustomResourceSubresources defines the status and scale subresources for CustomResources.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresources {
  #[serde(rename = "scale")]
  scale: Option<::models::IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresourceScale>,
  #[serde(rename = "status")]
  status: Option<::models::IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresourceStatus>
}

impl IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresources {
  /// CustomResourceSubresources defines the status and scale subresources for CustomResources.
  pub fn new() -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresources {
    IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresources {
      scale: None,
      status: None
    }
  }

  pub fn set_scale(&mut self, scale: ::models::IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresourceScale) {
    self.scale = Some(scale);
  }

  pub fn with_scale(mut self, scale: ::models::IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresourceScale) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresources {
    self.scale = Some(scale);
    self
  }

  pub fn scale(&self) -> Option<&::models::IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresourceScale> {
    self.scale.as_ref()
  }

  pub fn reset_scale(&mut self) {
    self.scale = None;
  }

  pub fn set_status(&mut self, status: ::models::IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresourceStatus) {
    self.status = Some(status);
  }

  pub fn with_status(mut self, status: ::models::IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresourceStatus) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresources {
    self.status = Some(status);
    self
  }

  pub fn status(&self) -> Option<&::models::IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceSubresourceStatus> {
    self.status.as_ref()
  }

  pub fn reset_status(&mut self) {
    self.status = None;
  }

}



