/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.13.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sApiAuditregistrationV1alpha1Policy : Policy defines the configuration of how audit events are logged

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sApiAuditregistrationV1alpha1Policy {
  /// The Level that all requests are recorded at. available options: None, Metadata, Request, RequestResponse required
  #[serde(rename = "level")]
  level: String,
  /// Stages is a list of stages for which events are created.
  #[serde(rename = "stages")]
  stages: Option<Vec<String>>
}

impl IoK8sApiAuditregistrationV1alpha1Policy {
  /// Policy defines the configuration of how audit events are logged
  pub fn new(level: String) -> IoK8sApiAuditregistrationV1alpha1Policy {
    IoK8sApiAuditregistrationV1alpha1Policy {
      level: level,
      stages: None
    }
  }

  pub fn set_level(&mut self, level: String) {
    self.level = level;
  }

  pub fn with_level(mut self, level: String) -> IoK8sApiAuditregistrationV1alpha1Policy {
    self.level = level;
    self
  }

  pub fn level(&self) -> &String {
    &self.level
  }


  pub fn set_stages(&mut self, stages: Vec<String>) {
    self.stages = Some(stages);
  }

  pub fn with_stages(mut self, stages: Vec<String>) -> IoK8sApiAuditregistrationV1alpha1Policy {
    self.stages = Some(stages);
    self
  }

  pub fn stages(&self) -> Option<&Vec<String>> {
    self.stages.as_ref()
  }

  pub fn reset_stages(&mut self) {
    self.stages = None;
  }

}



